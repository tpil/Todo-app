{"version":3,"sources":["components/Pages/About.js","components/Layout/Header.js","components/Layout/AddNewToDo.js","components/Layout/TodoItem.js","components/Layout/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["About","style","padding","Header","className","to","AddNewToDo","onChange","e","setState","target","name","value","submitDisabled","onSubmit","preventDefault","props","addTodo","state","newTodo","margin","width","Form","this","Row","Group","controlId","Control","type","placeholder","Button","variant","disabled","Component","TodoItem","toggleComplete","todoCompletion","completed","todoID","id","textDecoration","Container","Col","paddingLeft","componentDidUpdate","Todo","onClick","deleteTodo","TodoList","todosArray","map","todo","title","App","deleteID","axios","delete","then","res","filter","todoItem","post","data","get","exact","path","process","render","Fragment","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.902738e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div  style={{padding:'2%'}}>\r\n            <p>This is an app to save your Todo tasks in a list.</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport {Link} from 'react-router-dom';//to create links for our routes\r\nconst Header = () => {\r\n    return (\r\n        <header  className=\"text-center\" >\r\n        <h1>Todo List</h1>\r\n        <Link to=\"/\" >Home</Link>|\r\n                <Link to=\"/About\" >About</Link>\r\n        </header> \r\n    )\r\n}\r\nexport default Header;","import React, { Component } from 'react'\r\nimport { Button,Form } from 'react-bootstrap';\r\n\r\nclass AddNewToDo extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            newTodo:'',\r\n            submitDisabled:true\r\n        }\r\n    }\r\n\r\n    onChange =(e) =>{\r\n        //Se periptosh pou eixame forma me polla input mporoume na orizoume to name tou input idio me to ta state  wste na mh xreiazetai na kanume event handler gia ola ta input\r\n        this.setState({[e.target.name]:e.target.value});\r\n\r\n         /*An exoume ena mono input\r\n       // this.setState({newTodo:e.target.value});\r\n       // console.log(e.target.value);*/\r\n       \r\n        if(e.target.value!==''){\r\n            this.setState({submitDisabled:false})\r\n        }\r\n       \r\n    }\r\n    onSubmit =(e)=>{\r\n        e.preventDefault(); //apagoreuoyme na ginei to submit sto idio arxeio AddNewToDo.js\r\n        this.props.addTodo(this.state.newTodo);\r\n        this.setState({newTodo:''});\r\n        this.setState({submitDisabled:true});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin:\"auto\",width:'95%'}}>\r\n            <Form  style={{padding:'10px'}} onSubmit={this.onSubmit}>\r\n                <Form.Row className='d-flex bd-highlight'>\r\n                    <Form.Group className=\"col-10\" controlId=\"newTodo\">\r\n                    <Form.Control name='newTodo' value={this.state.newTodo} type=\"text\" placeholder=\"Enter a new todo\" onChange={this.onChange}/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group >\r\n                    <Button variant=\"primary\" type=\"submit\" disabled={this.state.submitDisabled}>\r\n                    <i className=\"fas fa-plus\"></i> Add new Todo\r\n                    </Button>\r\n                    </Form.Group>\r\n                </Form.Row>\r\n            </Form>\r\n           </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default AddNewToDo;","import React, {Component} from 'react';\r\nimport './TodoItem.css';\r\nimport { Container,Row,Col,Button } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types'; //When we want to set a type that this item gets, We can also set is as required\r\n\r\n class TodoItem extends Component{\r\n        constructor(props){\r\n            super(props);\r\n            this.state={\r\n                todoCompletion:this.props.completed,\r\n                todoID:this.props.id\r\n              \r\n            }\r\n        }\r\n\r\n    toggleComplete = (e) =>{\r\n        if (this.state.todoCompletion === false){\r\n            this.setState({todoCompletion:true});\r\n           \r\n        }else{\r\n            this.setState({todoCompletion:false});\r\n          \r\n        }\r\n\r\n    }\r\n\r\n \r\n    componentDidUpdate() {\r\n      if (this.state.todoCompletion === true){\r\n            return {textDecoration:\"line-through\"}\r\n      }else{\r\n        return {textDecoration:\"none\"}\r\n      }\r\n\r\n    }\r\n\r\n  \r\n    render(){\r\n       \r\n        return (\r\n        <Container>\r\n                <Row >\r\n                    <Col className=\"col-11\">\r\n                        <p className=\"TodoItem\" >\r\n                        <input type=\"checkbox\" onChange={this.toggleComplete} />           \r\n                        <span style={{paddingLeft:'10px'}}><b style={this.componentDidUpdate()}>{this.props.Todo}</b></span>\r\n                        </p>\r\n                    </Col>\r\n                    <Col >\r\n                    {/*pername ton event handle tou App.js me arrow funtion gia na to dei o parent kai deixnoyme to id pou prepeina diagrafei */}\r\n                        <Button className=\"delete-btn\"variant=\"danger\" onClick={()=>this.props.deleteTodo(this.state.todoID)}><i className=\"fas fa-trash-alt \"></i></Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nTodoItem.propTypes={\r\n    deleteTodo:PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoItem;","import React,{Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types'; //When we want to set a type that this list gets, We can also set is as required\r\n\r\n\r\n\r\n\r\nclass TodoList extends Component{\r\n   \r\n   \r\n           render(){\r\n         \r\n            \r\n            const todosArray = this.props.addTodo.map((todo)=>{\r\n             \r\n                return <TodoItem key={todo.id} id={todo.id}  Todo={todo.title} completed={todo.completed} deleteTodo={this.props.deleteTodo}/>\r\n            \r\n            })\r\n\r\n                    return (\r\n                        <div style={{margin:'3px'}}>\r\n                            {todosArray}\r\n                            \r\n                        </div>\r\n                    );         \r\n            }\r\n}\r\nTodoList.propTypes={\r\n    addTodo:PropTypes.array.isRequired,\r\n    deleteTodo:PropTypes.func.isRequired\r\n}\r\nexport default TodoList;\r\n\r\n","import React,{Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'; \nimport About from './components/Pages/About';\nimport Header from './components/Layout/Header';\nimport AddNewToDo from './components/Layout/AddNewToDo';\nimport TodoList from './components/Layout/TodoList';\n//import { v4 as uuidv4 } from 'uuid'; //to create random ids\nimport './App.css';\nimport axios from 'axios';\n\n\nclass App extends Component {\n\nconstructor(){\n  super()\n  this.state={\n    todo : []\n  }\n}\n componentDidMount(){\n   //we can limit data  in get if we use ?_limit=num of entries\naxios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res=>this.setState({todo:res.data}));\n\n } \n\ndeleteTodo = (deleteID) =>{\n   //console.log(deleteID);\n   /*Theloume na ftiaxei pinaka me ola ta Todo ektos auto poy diagrapsame.  kanoume spread ton hdh yparxon array [... ]\n    this.setState({todo:[...this.state.todo.filter(todo=>todo.id!==deleteID)]});*/\n\n  //DELETE request to delete data from server\n  axios.delete(`https://jsonplaceholder.typicode.com/todos/${deleteID}`)\n      .then(res=>this.setState({todo:[...this.state.todo.filter(todo=>todo.id!==deleteID)]}));\n}\n\naddTodo = (todoItem) =>{\n  /*const newTodo ={\n    id:uuidv4(),\n    title: todoItem,\n    completed:false\n  }\n  this.setState({todo:[...this.state.todo, newTodo]})\n  */\n  //POST request to save new todo to server\naxios.post('https://jsonplaceholder.typicode.com/todos',\n    {\n      title: todoItem,\n      completed:false\n    })\n    .then(res=>this.setState({todo:[...this.state.todo, res.data]}));\n}\n\nrender(){\n    return(\n      <Router>\n        <div className=\"App\">\n          <Header />\n         \n          {/* me to exact peririsoume to route mono se auto to path*/}\n          <Route exact path={process.env.PUBLIC_URL + '/'} render={props => (\n              <React.Fragment>\n                <AddNewToDo addTodo={this.addTodo}/>\n                {/*Pass todo to the list*/ }\n                <TodoList addTodo={this.state.todo} deleteTodo={this.deleteTodo}/>\n              </React.Fragment>\n          )} />\n          <Route  path={process.env.PUBLIC_URL + '/about'} component={About}/>\n          \n      </div>\n      </Router>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}